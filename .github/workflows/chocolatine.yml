name: Chocolatine Workflow

on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
    paths-ignore:
      - '.github/workflows/chocolatine.yml'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'
    paths-ignore:
      - '.github/workflows/chocolatine.yml'

env:
  MIRROR_URL: "git@github.com:Sookyuu/mirror2.git"
  EXECUTABLES: "mysh"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run coding style checker
        run: |
          check.sh $(pwd) $(pwd)
          if [ -s coding-style-reports.log ]; then
            while IFS= read -r line; do
              file=$(echo $line | cut -d':' -f1)
              lines=$(echo $line | cut -d':' -f2)
              lvl=$(echo $line | cut -d':' -f3)
              type=$(echo $line | cut -d':' -f4)
              echo "::error title=$lvl coding style error: $file#$lines::$type"
            done < "coding-style-reports.log"
            exit 1
          fi
  check_program_compilation:
    runs-on: ubuntu-latest
    needs: [check_coding_style]
    container:
      image: epitechcontent/epitest-docker
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Compile program
        run: make
        timeout-minutes: 2
      - name: Clean
        run: make clean
      - name: Verify executables
        run: |
          IFS=',' read -ra EXEC_ARRAY <<< "$EXECUTABLES"
          for exe in "${EXEC_ARRAY[@]}"; do
            if [ ! -x "$exe" ]; then
              echo "Executable $exe is missing or not executable"
              exit 1
            fi
          done
  run_tests:
    runs-on: ubuntu-latest
    needs: [check_program_compilation]
    container:
      image: epitechcontent/epitest-docker
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run tests
        run: make tests_run
        timeout-minutes: 2

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: []
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Mirror to repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}